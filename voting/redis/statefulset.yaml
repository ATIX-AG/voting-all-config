---
# Source: redis-cluster/templates/redis-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-cluster
  namespace: voting
  labels:
    app.kubernetes.io/name: redis-cluster
    app.kubernetes.io/instance: foo
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: redis-cluster
      app.kubernetes.io/instance: foo
  replicas: 3
  serviceName: redis-cluster-headless
  podManagementPolicy: "Parallel"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis-cluster
        app.kubernetes.io/instance: foo
    spec:
      enableServiceLinks: false
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
        sysctls: null
      serviceAccountName: default
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: redis-cluster
                    app.kubernetes.io/instance: foo
                namespaces:
                  - "voting"
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - name: redis-cluster
          image: docker.io/bitnami/redis-cluster:6.2.4-debian-10-r21
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
            sysctls: null
          command: ['/bin/bash', '-c']
          args:
            - |
              # Backwards compatibility change
              if ! [[ -f /opt/bitnami/redis/etc/redis.conf ]]; then
                  echo COPYING FILE
                  cp  /opt/bitnami/redis/etc/redis-default.conf /opt/bitnami/redis/etc/redis.conf
              fi
              pod_index=($(echo "$POD_NAME" | tr "-" "\n"))
              pod_index="${pod_index[-1]}"
              if [[ "$pod_index" == "0" ]]; then
                export REDIS_CLUSTER_CREATOR="yes"
                export REDIS_CLUSTER_REPLICAS="1"
              fi
              /opt/bitnami/scripts/redis-cluster/entrypoint.sh /opt/bitnami/scripts/redis-cluster/run.sh
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: REDIS_NODES
              value: "redis-cluster-0.redis-cluster-headless redis-cluster-1.redis-cluster-headless redis-cluster-2.redis-cluster-headless"
            - name: REDIS_AOF_ENABLED
              value: "yes"
            - name: REDIS_TLS_ENABLED
              value: "no"
            - name: REDIS_PORT
              value: "6379"
            - name: ALLOW_EMPTY_PASSWORD
              value: "true"
          ports:
            - name: tcp-redis
              containerPort: 6379
            - name: tcp-redis-bus
              containerPort: 16379
          livenessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            # One second longer than command timeout should prevent generation of zombie processes.
            timeoutSeconds: 6
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - /scripts/ping_liveness_local.sh 5
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            # One second longer than command timeout should prevent generation of zombie processes.
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - /scripts/ping_readiness_local.sh 1
          volumeMounts:
            - name: scripts
              mountPath: /scripts
            - name: redis-data
              mountPath: /bitnami/redis/data
              subPath: 
            - name: default-config
              mountPath: /opt/bitnami/redis/etc/redis-default.conf
              subPath: redis-default.conf
            - name: redis-tmp-conf
              mountPath: /opt/bitnami/redis/etc/
      volumes:
        - name: scripts
          configMap:
            name: redis-cluster-scripts
            defaultMode: 0755
        - name: default-config
          configMap:
            name: redis-cluster-default
        - name: redis-tmp-conf
          emptyDir: {}
        - name: redis-data
          emptyDir: {}
  updateStrategy:
    type: RollingUpdate
...
